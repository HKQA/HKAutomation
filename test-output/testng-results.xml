<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="22" failed="2" total="27" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="TestNG Test" duration-ms="887668" started-at="2015-03-11T10:27:58Z" finished-at="2015-03-11T10:42:45Z">
    <groups>
    </groups>
    <test name="HealthKart Automation Suite" duration-ms="887668" started-at="2015-03-11T10:27:58Z" finished-at="2015-03-11T10:42:45Z">
      <class name="com.hk.warehouseSpecific.DwarkaStoreAutoFlipping">
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.warehouseSpecific.DwarkaStoreAutoFlipping@32d5cb0]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.warehouseSpecific.DwarkaStoreAutoFlipping@32d5cb0]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the DwarkaAutoFlip test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the DwarkaAutoFlip test case as RunMode is No
	at com.hk.warehouseSpecific.DwarkaStoreAutoFlipping.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="testDwarkaStoreAutoFlipping()[pri:0, instance:com.hk.warehouseSpecific.DwarkaStoreAutoFlipping@32d5cb0]" name="testDwarkaStoreAutoFlipping" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDwarkaStoreAutoFlipping -->
      </class> <!-- com.hk.warehouseSpecific.DwarkaStoreAutoFlipping -->
      <class name="com.hk.warehouseSpecific.GGNRtoTest">
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.warehouseSpecific.GGNRtoTest@4ced9a4d]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the RPUTest test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the RPUTest test case as RunMode is No
	at com.hk.warehouseSpecific.GGNRtoTest.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="testGGNRto()[pri:0, instance:com.hk.warehouseSpecific.GGNRtoTest@4ced9a4d]" name="testGGNRto" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGGNRto -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.warehouseSpecific.GGNRtoTest@4ced9a4d]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.warehouseSpecific.GGNRtoTest -->
      <class name="com.hk.scaledupOrderPlacement.RPUTest">
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.scaledupOrderPlacement.RPUTest@44929d0b]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.scaledupOrderPlacement.RPUTest@44929d0b]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the RPUTest test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the RPUTest test case as RunMode is No
	at com.hk.scaledupOrderPlacement.RPUTest.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="testRPU()[pri:0, instance:com.hk.scaledupOrderPlacement.RPUTest@44929d0b]" name="testRPU" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRPU -->
      </class> <!-- com.hk.scaledupOrderPlacement.RPUTest -->
      <class name="com.hk.warehouseSpecific.DwarkaStoreRPUCheckin">
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.warehouseSpecific.DwarkaStoreRPUCheckin@403f1e93]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the DwarkaRPUCheckin test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the DwarkaRPUCheckin test case as RunMode is No
	at com.hk.warehouseSpecific.DwarkaStoreRPUCheckin.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="testDwarkaStoreRPUCheckin()[pri:0, instance:com.hk.warehouseSpecific.DwarkaStoreRPUCheckin@403f1e93]" name="testDwarkaStoreRPUCheckin" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDwarkaStoreRPUCheckin -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.warehouseSpecific.DwarkaStoreRPUCheckin@403f1e93]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.warehouseSpecific.DwarkaStoreRPUCheckin -->
      <class name="com.hk.warehouseSpecific.PUNStoreAutoFlipping">
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.warehouseSpecific.PUNStoreAutoFlipping@fae8152]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the Punjabi Bagh Store Auto Flip test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the Punjabi Bagh Store Auto Flip test case as RunMode is No
	at com.hk.warehouseSpecific.PUNStoreAutoFlipping.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.warehouseSpecific.PUNStoreAutoFlipping@fae8152]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
        <test-method status="SKIP" signature="testPUNStoreAutoFlipping()[pri:0, instance:com.hk.warehouseSpecific.PUNStoreAutoFlipping@fae8152]" name="testPUNStoreAutoFlipping" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPUNStoreAutoFlipping -->
      </class> <!-- com.hk.warehouseSpecific.PUNStoreAutoFlipping -->
      <class name="com.hk.orderPlacement.GuestCheckoutCod">
        <test-method status="PASS" signature="isSkip()[pri:0, instance:com.hk.orderPlacement.GuestCheckoutCod@6b1d5b59]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:06:21Z" finished-at="2015-03-11T16:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="PASS" signature="config()[pri:0, instance:com.hk.orderPlacement.GuestCheckoutCod@6b1d5b59]" name="config" is-config="true" duration-ms="0" started-at="2015-03-11T16:06:21Z" finished-at="2015-03-11T16:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- config -->
        <test-method status="PASS" signature="login(java.lang.Long)[pri:0, instance:com.hk.orderPlacement.GuestCheckoutCod@6b1d5b59]" name="login" duration-ms="80989" started-at="2015-03-11T16:06:21Z" finished-at="2015-03-11T16:07:42Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.orderPlacement.GuestCheckoutCod@6b1d5b59]" name="doAfter" is-config="true" duration-ms="1680" started-at="2015-03-11T16:07:42Z" finished-at="2015-03-11T16:07:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=GuestCheckoutCod.login(java.lang.Long)[pri:0, instance:com.hk.orderPlacement.GuestCheckoutCod@6b1d5b59] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.orderPlacement.GuestCheckoutCod -->
      <class name="com.hk.scaledupOrderPlacement.ExistingOnline">
        <test-method status="FAIL" signature="test()[pri:0, instance:com.hk.scaledupOrderPlacement.ExistingOnline@784a2d5e]" name="test" duration-ms="72366" started-at="2015-03-11T16:11:31Z" finished-at="2015-03-11T16:12:44Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element
  (Session info: chrome=40.0.2214.115)
  (Driver info: chromedriver=2.7.236900,platform=Windows NT 6.1 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 6.04 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.42.2', revision: '6a6995d', time: '2014-06-03 17:42:30'
System info: host: 'Tech-VipulJain', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_45'
Session ID: 767865feaff7304dcd56d88c52fd1fbd
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{platform=XP, acceptSslCerts=true, javascriptEnabled=true, browserName=chrome, chrome={userDataDir=C:\Users\VIPUL~1.JAI\AppData\Local\Temp\scoped_dir42996_3312}, rotatable=false, locationContextEnabled=true, version=40.0.2214.115, takesHeapSnapshot=true, cssSelectorsEnabled=true, databaseEnabled=false, handlesAlerts=true, browserConnectionEnabled=false, nativeEvents=true, webStorageEnabled=true, applicationCacheEnabled=false, takesScreenshot=true}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element
  (Session info: chrome=40.0.2214.115)
  (Driver info: chromedriver=2.7.236900,platform=Windows NT 6.1 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 6.04 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.42.2', revision: '6a6995d', time: '2014-06-03 17:42:30'
System info: host: 'Tech-VipulJain', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_45'
Session ID: 767865feaff7304dcd56d88c52fd1fbd
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{platform=XP, acceptSslCerts=true, javascriptEnabled=true, browserName=chrome, chrome={userDataDir=C:\Users\VIPUL~1.JAI\AppData\Local\Temp\scoped_dir42996_3312}, rotatable=false, locationContextEnabled=true, version=40.0.2214.115, takesHeapSnapshot=true, cssSelectorsEnabled=true, databaseEnabled=false, handlesAlerts=true, browserConnectionEnabled=false, nativeEvents=true, webStorageEnabled=true, applicationCacheEnabled=false, takesScreenshot=true}]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:449)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:357)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
	at com.hk.scaledupOrderPlacement.ExistingOnline.test(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="isSkip()[pri:0, instance:com.hk.scaledupOrderPlacement.ExistingOnline@784a2d5e]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:11:31Z" finished-at="2015-03-11T16:11:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="PASS" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.scaledupOrderPlacement.ExistingOnline@784a2d5e]" name="doAfter" is-config="true" duration-ms="1885" started-at="2015-03-11T16:12:44Z" finished-at="2015-03-11T16:12:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=FAILURE method=ExistingOnline.test()[pri:0, instance:com.hk.scaledupOrderPlacement.ExistingOnline@784a2d5e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.scaledupOrderPlacement.ExistingOnline -->
      <class name="com.hk.scaledupOrderPlacement.RTOTest">
        <test-method status="SKIP" signature="RTOTest()[pri:0, instance:com.hk.scaledupOrderPlacement.RTOTest@545866ff]" name="RTOTest" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RTOTest -->
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.scaledupOrderPlacement.RTOTest@545866ff]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test case as RunMode is No
	at com.hk.scaledupOrderPlacement.RTOTest.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.scaledupOrderPlacement.RTOTest@545866ff]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.scaledupOrderPlacement.RTOTest -->
      <class name="com.hk.warehouseSpecific.MUMSplitSOTest">
        <test-method status="SKIP" signature="testMUMSplitSO()[pri:0, instance:com.hk.warehouseSpecific.MUMSplitSOTest@2d0f392]" name="testMUMSplitSO" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMUMSplitSO -->
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.warehouseSpecific.MUMSplitSOTest@2d0f392]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the MUM Split SO test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the MUM Split SO test case as RunMode is No
	at com.hk.warehouseSpecific.MUMSplitSOTest.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.warehouseSpecific.MUMSplitSOTest@2d0f392]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.warehouseSpecific.MUMSplitSOTest -->
      <class name="com.hk.orderPlacement.ExistingCodPlacement">
        <test-method status="PASS" signature="Config()[pri:0, instance:com.hk.orderPlacement.ExistingCodPlacement@149838d9]" name="Config" is-config="true" duration-ms="0" started-at="2015-03-11T15:57:58Z" finished-at="2015-03-11T15:57:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Config -->
        <test-method status="PASS" signature="login(java.lang.Long)[pri:0, instance:com.hk.orderPlacement.ExistingCodPlacement@149838d9]" name="login" duration-ms="241819" started-at="2015-03-11T15:57:58Z" finished-at="2015-03-11T16:02:00Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="isSkip()[pri:0, instance:com.hk.orderPlacement.ExistingCodPlacement@149838d9]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T15:57:58Z" finished-at="2015-03-11T15:57:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="PASS" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.orderPlacement.ExistingCodPlacement@149838d9]" name="doAfter" is-config="true" duration-ms="1621" started-at="2015-03-11T16:02:00Z" finished-at="2015-03-11T16:02:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=ExistingCodPlacement.login(java.lang.Long)[pri:0, instance:com.hk.orderPlacement.ExistingCodPlacement@149838d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.orderPlacement.ExistingCodPlacement -->
      <class name="com.hk.warehouseSpecific.MUMFlipSOTest">
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.warehouseSpecific.MUMFlipSOTest@41750ae1]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the MUM Flip SO test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the MUM Flip SO test case as RunMode is No
	at com.hk.warehouseSpecific.MUMFlipSOTest.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="testMUMFlipSO()[pri:0, instance:com.hk.warehouseSpecific.MUMFlipSOTest@41750ae1]" name="testMUMFlipSO" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMUMFlipSO -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.warehouseSpecific.MUMFlipSOTest@41750ae1]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.warehouseSpecific.MUMFlipSOTest -->
      <class name="com.hk.orderPlacement.GuestCheckoutOnline">
        <test-method status="PASS" signature="Config()[pri:0, instance:com.hk.orderPlacement.GuestCheckoutOnline@9ac3689]" name="Config" is-config="true" duration-ms="0" started-at="2015-03-11T16:07:44Z" finished-at="2015-03-11T16:07:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Config -->
        <test-method status="PASS" signature="isSkip()[pri:0, instance:com.hk.orderPlacement.GuestCheckoutOnline@9ac3689]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:07:44Z" finished-at="2015-03-11T16:07:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="FAIL" signature="login(java.lang.Long)[pri:0, instance:com.hk.orderPlacement.GuestCheckoutOnline@9ac3689]" name="login" duration-ms="225403" started-at="2015-03-11T16:07:44Z" finished-at="2015-03-11T16:11:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.hk.orderPlacement.GuestCheckoutOnline.login(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.orderPlacement.GuestCheckoutOnline@9ac3689]" name="doAfter" is-config="true" duration-ms="2184" started-at="2015-03-11T16:11:29Z" finished-at="2015-03-11T16:11:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=FAILURE method=GuestCheckoutOnline.login(java.lang.Long)[pri:0, instance:com.hk.orderPlacement.GuestCheckoutOnline@9ac3689] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.orderPlacement.GuestCheckoutOnline -->
      <class name="com.hk.poscheckout.POSCheckout">
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.poscheckout.POSCheckout@26434ff9]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
        <test-method status="SKIP" signature="posCheckout()[pri:0, instance:com.hk.poscheckout.POSCheckout@26434ff9]" name="posCheckout" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posCheckout -->
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.poscheckout.POSCheckout@26434ff9]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the RPUTest test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the RPUTest test case as RunMode is No
	at com.hk.poscheckout.POSCheckout.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
      </class> <!-- com.hk.poscheckout.POSCheckout -->
      <class name="com.hk.orderPlacement.ExistingOnlineOrder">
        <test-method status="PASS" signature="login(java.lang.Long)[pri:0, instance:com.hk.orderPlacement.ExistingOnlineOrder@4b0f30f5]" name="login" duration-ms="257557" started-at="2015-03-11T16:02:02Z" finished-at="2015-03-11T16:06:19Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="Config()[pri:0, instance:com.hk.orderPlacement.ExistingOnlineOrder@4b0f30f5]" name="Config" is-config="true" duration-ms="0" started-at="2015-03-11T16:02:02Z" finished-at="2015-03-11T16:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Config -->
        <test-method status="PASS" signature="isSkip()[pri:0, instance:com.hk.orderPlacement.ExistingOnlineOrder@4b0f30f5]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:02:02Z" finished-at="2015-03-11T16:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="PASS" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.orderPlacement.ExistingOnlineOrder@4b0f30f5]" name="doAfter" is-config="true" duration-ms="1884" started-at="2015-03-11T16:06:19Z" finished-at="2015-03-11T16:06:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=ExistingOnlineOrder.login(java.lang.Long)[pri:0, instance:com.hk.orderPlacement.ExistingOnlineOrder@4b0f30f5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.orderPlacement.ExistingOnlineOrder -->
      <class name="com.hk.warehouseSpecific.HYDCFACancellation">
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.warehouseSpecific.HYDCFACancellation@4de8b404]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the HYDCFA Cancellation test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the HYDCFA Cancellation test case as RunMode is No
	at com.hk.warehouseSpecific.HYDCFACancellation.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.warehouseSpecific.HYDCFACancellation@4de8b404]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
        <test-method status="SKIP" signature="testHYDCFACancellation()[pri:0, instance:com.hk.warehouseSpecific.HYDCFACancellation@4de8b404]" name="testHYDCFACancellation" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHYDCFACancellation -->
      </class> <!-- com.hk.warehouseSpecific.HYDCFACancellation -->
      <class name="com.hk.warehouseSpecific.MUMCancellation">
        <test-method status="SKIP" signature="testMUMCancellation()[pri:0, instance:com.hk.warehouseSpecific.MUMCancellation@61121eb9]" name="testMUMCancellation" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMUMCancellation -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.warehouseSpecific.MUMCancellation@61121eb9]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.warehouseSpecific.MUMCancellation@61121eb9]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the MUM cancellation test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the MUM cancellation test case as RunMode is No
	at com.hk.warehouseSpecific.MUMCancellation.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
      </class> <!-- com.hk.warehouseSpecific.MUMCancellation -->
      <class name="com.hk.cancellation.TestWebCancellation">
        <test-method status="SKIP" signature="testWebCancellation()[pri:0, instance:com.hk.cancellation.TestWebCancellation@4adc504d]" name="testWebCancellation" duration-ms="0" started-at="2015-03-11T16:06:21Z" finished-at="2015-03-11T16:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWebCancellation -->
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.cancellation.TestWebCancellation@4adc504d]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:06:21Z" finished-at="2015-03-11T16:06:21Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test case as RunMode is No
	at com.hk.cancellation.TestWebCancellation.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.cancellation.TestWebCancellation@4adc504d]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:06:21Z" finished-at="2015-03-11T16:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.cancellation.TestWebCancellation -->
      <class name="com.hk.scaledupOrderPlacement.FlipTest">
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.scaledupOrderPlacement.FlipTest@60b20be]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test case as RunMode is No
	at com.hk.scaledupOrderPlacement.FlipTest.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="doFlipTest()[pri:0, instance:com.hk.scaledupOrderPlacement.FlipTest@60b20be]" name="doFlipTest" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doFlipTest -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.scaledupOrderPlacement.FlipTest@60b20be]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.scaledupOrderPlacement.FlipTest -->
      <class name="com.hk.cancellation.TestAquaCancellation">
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.cancellation.TestAquaCancellation@17202871]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T15:57:58Z" finished-at="2015-03-11T15:57:58Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test case as RunMode is No
	at com.hk.cancellation.TestAquaCancellation.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="testAquaCancellation()[pri:0, instance:com.hk.cancellation.TestAquaCancellation@17202871]" name="testAquaCancellation" duration-ms="0" started-at="2015-03-11T15:57:58Z" finished-at="2015-03-11T15:57:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAquaCancellation -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.cancellation.TestAquaCancellation@17202871]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T15:57:58Z" finished-at="2015-03-11T15:57:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.cancellation.TestAquaCancellation -->
      <class name="com.hk.orderPlacement.SignupOrderOnline">
        <test-method status="SKIP" signature="login(java.lang.Long)[pri:0, instance:com.hk.orderPlacement.SignupOrderOnline@461c15a0]" name="login" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.orderPlacement.SignupOrderOnline@461c15a0]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the SignUpOrderOnline test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the SignUpOrderOnline test case as RunMode is No
	at com.hk.orderPlacement.SignupOrderOnline.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.orderPlacement.SignupOrderOnline@461c15a0]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
        <test-method status="PASS" signature="config()[pri:0, instance:com.hk.orderPlacement.SignupOrderOnline@461c15a0]" name="config" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- config -->
      </class> <!-- com.hk.orderPlacement.SignupOrderOnline -->
      <class name="com.hk.orderPlacement.SignupCodOrder">
        <test-method status="SKIP" signature="login(java.lang.Long)[pri:0, instance:com.hk.orderPlacement.SignupCodOrder@696add0e]" name="login" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.orderPlacement.SignupCodOrder@696add0e]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the SignUpCodOrder test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the SignUpCodOrder test case as RunMode is No
	at com.hk.orderPlacement.SignupCodOrder.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.orderPlacement.SignupCodOrder@696add0e]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
        <test-method status="PASS" signature="config()[pri:0, instance:com.hk.orderPlacement.SignupCodOrder@696add0e]" name="config" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- config -->
      </class> <!-- com.hk.orderPlacement.SignupCodOrder -->
      <class name="com.hk.scaledupOrderPlacement.StoreCheckoutTest">
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.scaledupOrderPlacement.StoreCheckoutTest@9306155]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the StoreCheckoutTest test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the StoreCheckoutTest test case as RunMode is No
	at com.hk.scaledupOrderPlacement.StoreCheckoutTest.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="testStoreCheckout()[pri:0, instance:com.hk.scaledupOrderPlacement.StoreCheckoutTest@9306155]" name="testStoreCheckout" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreCheckout -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.scaledupOrderPlacement.StoreCheckoutTest@9306155]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.scaledupOrderPlacement.StoreCheckoutTest -->
      <class name="com.hk.scaledupOrderPlacement.AddressChangeTest">
        <test-method status="SKIP" signature="testAddressChange()[pri:0, instance:com.hk.scaledupOrderPlacement.AddressChangeTest@6ff065d8]" name="testAddressChange" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddressChange -->
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.scaledupOrderPlacement.AddressChangeTest@6ff065d8]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test case as RunMode is No
	at com.hk.scaledupOrderPlacement.AddressChangeTest.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.scaledupOrderPlacement.AddressChangeTest@6ff065d8]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.scaledupOrderPlacement.AddressChangeTest -->
      <class name="com.hk.scaledupOrderPlacement.SplitSOTest">
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.scaledupOrderPlacement.SplitSOTest@47461829]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.scaledupOrderPlacement.SplitSOTest@47461829]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the ExistingOnlineOrder test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the ExistingOnlineOrder test case as RunMode is No
	at com.hk.scaledupOrderPlacement.SplitSOTest.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="doSplitSOTest()[pri:0, instance:com.hk.scaledupOrderPlacement.SplitSOTest@47461829]" name="doSplitSOTest" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doSplitSOTest -->
      </class> <!-- com.hk.scaledupOrderPlacement.SplitSOTest -->
      <class name="com.hk.warehouseSpecific.MUMRtoTest">
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.warehouseSpecific.MUMRtoTest@68829a91]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the MUM Split SO test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the MUM Split SO test case as RunMode is No
	at com.hk.warehouseSpecific.MUMRtoTest.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="testMUMRto()[pri:0, instance:com.hk.warehouseSpecific.MUMRtoTest@68829a91]" name="testMUMRto" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMUMRto -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.warehouseSpecific.MUMRtoTest@68829a91]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.warehouseSpecific.MUMRtoTest -->
      <class name="com.hk.warehouseSpecific.MUMRpuTest">
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.warehouseSpecific.MUMRpuTest@7aa34f04]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
        <test-method status="SKIP" signature="testMUMRpu()[pri:0, instance:com.hk.warehouseSpecific.MUMRpuTest@7aa34f04]" name="testMUMRpu" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMUMRpu -->
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.warehouseSpecific.MUMRpuTest@7aa34f04]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the MUM Split SO test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the MUM Split SO test case as RunMode is No
	at com.hk.warehouseSpecific.MUMRpuTest.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
      </class> <!-- com.hk.warehouseSpecific.MUMRpuTest -->
      <class name="com.hk.orderPlacement.CouponOnlineOrder">
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:com.hk.orderPlacement.CouponOnlineOrder@77d21a9b]" name="isSkip" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the CouponOnlineOrder test case as RunMode is No]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the CouponOnlineOrder test case as RunMode is No
	at com.hk.orderPlacement.CouponOnlineOrder.isSkip(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
        <test-method status="SKIP" signature="login(java.lang.Long)[pri:0, instance:com.hk.orderPlacement.CouponOnlineOrder@77d21a9b]" name="login" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="Config()[pri:0, instance:com.hk.orderPlacement.CouponOnlineOrder@77d21a9b]" name="Config" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Config -->
        <test-method status="SKIP" signature="doAfter(org.testng.ITestResult)[pri:0, instance:com.hk.orderPlacement.CouponOnlineOrder@77d21a9b]" name="doAfter" is-config="true" duration-ms="0" started-at="2015-03-11T16:12:45Z" finished-at="2015-03-11T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doAfter -->
      </class> <!-- com.hk.orderPlacement.CouponOnlineOrder -->
    </test> <!-- HealthKart Automation Suite -->
  </suite> <!-- TestNG Test -->
</testng-results>
